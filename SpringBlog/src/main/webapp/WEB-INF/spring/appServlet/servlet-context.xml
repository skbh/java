<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<!-- <beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"> 
		<beans:property name="prefix" value="/WEB-INF/views/" /> <beans:property 
		name="suffix" value=".jsp" /> </beans:bean> -->
	<context:annotation-config />
	<context:component-scan base-package="com.skbh.java" />


	<beans:bean id="tilesConfigurer"
		class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<beans:property name="definitions">
			<beans:list>
				<beans:value>/WEB-INF/defs/general.xml</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>

	<beans:bean id="viewResolver"
		class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<beans:property name="viewClass"
			value="org.springframework.web.servlet.view.tiles3.TilesView" />
	</beans:bean>

	<!-- Connection Pooling data source -->
	<beans:bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<beans:property name="driverClass" value="org.postgresql.Driver" />
		<beans:property name="jdbcUrl" value="jdbc:postgresql://localhost/skbh" />
		<beans:property name="user" value="postgres" />
		<beans:property name="password" value="postgres" />
		<beans:property name="initialPoolSize" value="5" />
		<beans:property name="minPoolSize" value="5" />
		<beans:property name="maxPoolSize" value="20" />
		<beans:property name="maxStatements" value="5" />
		<beans:property name="maxIdleTime" value="3600" />
		<beans:property name="maxConnectionAge" value="3600" />
		<beans:property name="checkoutTimeout" value="20000" />
		<beans:property name="acquireIncrement" value="5" />
	</beans:bean>

	<beans:bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="packagesToScan" value="com.skbh.java.*" />
		<beans:property name="hibernateProperties">
			<beans:props>
				<beans:prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect
				</beans:prop>
				<beans:prop key="hibernate.hbm2ddl.auto">update</beans:prop>
				<beans:prop key="hibernate.show_sql">true</beans:prop>
			</beans:props>
		</beans:property>
		<beans:property name="mappingResources">
			<beans:list>
				<beans:value>/com/skbh/java/mapping/LoginDetails.hbm.xml</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>
	
	<beans:bean id="loginManager" class="com.skbh.java.manager.impl.LoginManagerImpl" />
	<beans:bean id="loginService" class="com.skbh.java.service.impl.LoginServiceImpl" />

</beans:beans>

